/*
 * This file is generated by jOOQ.
 */
package uk.co.raubach.weatherstation.server.database.codegen.tables.records;


import java.math.BigDecimal;
import java.sql.Timestamp;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record13;
import org.jooq.Row13;
import org.jooq.impl.UpdatableRecordImpl;

import uk.co.raubach.weatherstation.server.database.codegen.tables.Measurements;


// @formatter:off
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MeasurementsRecord extends UpdatableRecordImpl<MeasurementsRecord> implements Record13<Long, BigDecimal, BigDecimal, BigDecimal, BigDecimal, BigDecimal, BigDecimal, BigDecimal, BigDecimal, BigDecimal, BigDecimal, Boolean, Timestamp> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>weatherstation_db.measurements.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>weatherstation_db.measurements.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>weatherstation_db.measurements.ambient_temp</code>.
     */
    public void setAmbientTemp(BigDecimal value) {
        set(1, value);
    }

    /**
     * Getter for <code>weatherstation_db.measurements.ambient_temp</code>.
     */
    public BigDecimal getAmbientTemp() {
        return (BigDecimal) get(1);
    }

    /**
     * Setter for <code>weatherstation_db.measurements.ground_temp</code>.
     */
    public void setGroundTemp(BigDecimal value) {
        set(2, value);
    }

    /**
     * Getter for <code>weatherstation_db.measurements.ground_temp</code>.
     */
    public BigDecimal getGroundTemp() {
        return (BigDecimal) get(2);
    }

    /**
     * Setter for <code>weatherstation_db.measurements.pressure</code>.
     */
    public void setPressure(BigDecimal value) {
        set(3, value);
    }

    /**
     * Getter for <code>weatherstation_db.measurements.pressure</code>.
     */
    public BigDecimal getPressure() {
        return (BigDecimal) get(3);
    }

    /**
     * Setter for <code>weatherstation_db.measurements.humidity</code>.
     */
    public void setHumidity(BigDecimal value) {
        set(4, value);
    }

    /**
     * Getter for <code>weatherstation_db.measurements.humidity</code>.
     */
    public BigDecimal getHumidity() {
        return (BigDecimal) get(4);
    }

    /**
     * Setter for <code>weatherstation_db.measurements.wind_average</code>.
     */
    public void setWindAverage(BigDecimal value) {
        set(5, value);
    }

    /**
     * Getter for <code>weatherstation_db.measurements.wind_average</code>.
     */
    public BigDecimal getWindAverage() {
        return (BigDecimal) get(5);
    }

    /**
     * Setter for <code>weatherstation_db.measurements.wind_speed</code>.
     */
    public void setWindSpeed(BigDecimal value) {
        set(6, value);
    }

    /**
     * Getter for <code>weatherstation_db.measurements.wind_speed</code>.
     */
    public BigDecimal getWindSpeed() {
        return (BigDecimal) get(6);
    }

    /**
     * Setter for <code>weatherstation_db.measurements.wind_gust</code>.
     */
    public void setWindGust(BigDecimal value) {
        set(7, value);
    }

    /**
     * Getter for <code>weatherstation_db.measurements.wind_gust</code>.
     */
    public BigDecimal getWindGust() {
        return (BigDecimal) get(7);
    }

    /**
     * Setter for <code>weatherstation_db.measurements.rainfall</code>.
     */
    public void setRainfall(BigDecimal value) {
        set(8, value);
    }

    /**
     * Getter for <code>weatherstation_db.measurements.rainfall</code>.
     */
    public BigDecimal getRainfall() {
        return (BigDecimal) get(8);
    }

    /**
     * Setter for <code>weatherstation_db.measurements.pi_temp</code>.
     */
    public void setPiTemp(BigDecimal value) {
        set(9, value);
    }

    /**
     * Getter for <code>weatherstation_db.measurements.pi_temp</code>.
     */
    public BigDecimal getPiTemp() {
        return (BigDecimal) get(9);
    }

    /**
     * Setter for <code>weatherstation_db.measurements.lux</code>.
     */
    public void setLux(BigDecimal value) {
        set(10, value);
    }

    /**
     * Getter for <code>weatherstation_db.measurements.lux</code>.
     */
    public BigDecimal getLux() {
        return (BigDecimal) get(10);
    }

    /**
     * Setter for <code>weatherstation_db.measurements.uploaded_wu</code>.
     */
    public void setUploadedWu(Boolean value) {
        set(11, value);
    }

    /**
     * Getter for <code>weatherstation_db.measurements.uploaded_wu</code>.
     */
    public Boolean getUploadedWu() {
        return (Boolean) get(11);
    }

    /**
     * Setter for <code>weatherstation_db.measurements.created</code>.
     */
    public void setCreated(Timestamp value) {
        set(12, value);
    }

    /**
     * Getter for <code>weatherstation_db.measurements.created</code>.
     */
    public Timestamp getCreated() {
        return (Timestamp) get(12);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record13 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row13<Long, BigDecimal, BigDecimal, BigDecimal, BigDecimal, BigDecimal, BigDecimal, BigDecimal, BigDecimal, BigDecimal, BigDecimal, Boolean, Timestamp> fieldsRow() {
        return (Row13) super.fieldsRow();
    }

    @Override
    public Row13<Long, BigDecimal, BigDecimal, BigDecimal, BigDecimal, BigDecimal, BigDecimal, BigDecimal, BigDecimal, BigDecimal, BigDecimal, Boolean, Timestamp> valuesRow() {
        return (Row13) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Measurements.MEASUREMENTS.ID;
    }

    @Override
    public Field<BigDecimal> field2() {
        return Measurements.MEASUREMENTS.AMBIENT_TEMP;
    }

    @Override
    public Field<BigDecimal> field3() {
        return Measurements.MEASUREMENTS.GROUND_TEMP;
    }

    @Override
    public Field<BigDecimal> field4() {
        return Measurements.MEASUREMENTS.PRESSURE;
    }

    @Override
    public Field<BigDecimal> field5() {
        return Measurements.MEASUREMENTS.HUMIDITY;
    }

    @Override
    public Field<BigDecimal> field6() {
        return Measurements.MEASUREMENTS.WIND_AVERAGE;
    }

    @Override
    public Field<BigDecimal> field7() {
        return Measurements.MEASUREMENTS.WIND_SPEED;
    }

    @Override
    public Field<BigDecimal> field8() {
        return Measurements.MEASUREMENTS.WIND_GUST;
    }

    @Override
    public Field<BigDecimal> field9() {
        return Measurements.MEASUREMENTS.RAINFALL;
    }

    @Override
    public Field<BigDecimal> field10() {
        return Measurements.MEASUREMENTS.PI_TEMP;
    }

    @Override
    public Field<BigDecimal> field11() {
        return Measurements.MEASUREMENTS.LUX;
    }

    @Override
    public Field<Boolean> field12() {
        return Measurements.MEASUREMENTS.UPLOADED_WU;
    }

    @Override
    public Field<Timestamp> field13() {
        return Measurements.MEASUREMENTS.CREATED;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public BigDecimal component2() {
        return getAmbientTemp();
    }

    @Override
    public BigDecimal component3() {
        return getGroundTemp();
    }

    @Override
    public BigDecimal component4() {
        return getPressure();
    }

    @Override
    public BigDecimal component5() {
        return getHumidity();
    }

    @Override
    public BigDecimal component6() {
        return getWindAverage();
    }

    @Override
    public BigDecimal component7() {
        return getWindSpeed();
    }

    @Override
    public BigDecimal component8() {
        return getWindGust();
    }

    @Override
    public BigDecimal component9() {
        return getRainfall();
    }

    @Override
    public BigDecimal component10() {
        return getPiTemp();
    }

    @Override
    public BigDecimal component11() {
        return getLux();
    }

    @Override
    public Boolean component12() {
        return getUploadedWu();
    }

    @Override
    public Timestamp component13() {
        return getCreated();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public BigDecimal value2() {
        return getAmbientTemp();
    }

    @Override
    public BigDecimal value3() {
        return getGroundTemp();
    }

    @Override
    public BigDecimal value4() {
        return getPressure();
    }

    @Override
    public BigDecimal value5() {
        return getHumidity();
    }

    @Override
    public BigDecimal value6() {
        return getWindAverage();
    }

    @Override
    public BigDecimal value7() {
        return getWindSpeed();
    }

    @Override
    public BigDecimal value8() {
        return getWindGust();
    }

    @Override
    public BigDecimal value9() {
        return getRainfall();
    }

    @Override
    public BigDecimal value10() {
        return getPiTemp();
    }

    @Override
    public BigDecimal value11() {
        return getLux();
    }

    @Override
    public Boolean value12() {
        return getUploadedWu();
    }

    @Override
    public Timestamp value13() {
        return getCreated();
    }

    @Override
    public MeasurementsRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public MeasurementsRecord value2(BigDecimal value) {
        setAmbientTemp(value);
        return this;
    }

    @Override
    public MeasurementsRecord value3(BigDecimal value) {
        setGroundTemp(value);
        return this;
    }

    @Override
    public MeasurementsRecord value4(BigDecimal value) {
        setPressure(value);
        return this;
    }

    @Override
    public MeasurementsRecord value5(BigDecimal value) {
        setHumidity(value);
        return this;
    }

    @Override
    public MeasurementsRecord value6(BigDecimal value) {
        setWindAverage(value);
        return this;
    }

    @Override
    public MeasurementsRecord value7(BigDecimal value) {
        setWindSpeed(value);
        return this;
    }

    @Override
    public MeasurementsRecord value8(BigDecimal value) {
        setWindGust(value);
        return this;
    }

    @Override
    public MeasurementsRecord value9(BigDecimal value) {
        setRainfall(value);
        return this;
    }

    @Override
    public MeasurementsRecord value10(BigDecimal value) {
        setPiTemp(value);
        return this;
    }

    @Override
    public MeasurementsRecord value11(BigDecimal value) {
        setLux(value);
        return this;
    }

    @Override
    public MeasurementsRecord value12(Boolean value) {
        setUploadedWu(value);
        return this;
    }

    @Override
    public MeasurementsRecord value13(Timestamp value) {
        setCreated(value);
        return this;
    }

    @Override
    public MeasurementsRecord values(Long value1, BigDecimal value2, BigDecimal value3, BigDecimal value4, BigDecimal value5, BigDecimal value6, BigDecimal value7, BigDecimal value8, BigDecimal value9, BigDecimal value10, BigDecimal value11, Boolean value12, Timestamp value13) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MeasurementsRecord
     */
    public MeasurementsRecord() {
        super(Measurements.MEASUREMENTS);
    }

    /**
     * Create a detached, initialised MeasurementsRecord
     */
    public MeasurementsRecord(Long id, BigDecimal ambientTemp, BigDecimal groundTemp, BigDecimal pressure, BigDecimal humidity, BigDecimal windAverage, BigDecimal windSpeed, BigDecimal windGust, BigDecimal rainfall, BigDecimal piTemp, BigDecimal lux, Boolean uploadedWu, Timestamp created) {
        super(Measurements.MEASUREMENTS);

        setId(id);
        setAmbientTemp(ambientTemp);
        setGroundTemp(groundTemp);
        setPressure(pressure);
        setHumidity(humidity);
        setWindAverage(windAverage);
        setWindSpeed(windSpeed);
        setWindGust(windGust);
        setRainfall(rainfall);
        setPiTemp(piTemp);
        setLux(lux);
        setUploadedWu(uploadedWu);
        setCreated(created);
    }

    /**
     * Create a detached, initialised MeasurementsRecord
     */
    public MeasurementsRecord(uk.co.raubach.weatherstation.server.database.codegen.tables.pojos.Measurements value) {
        super(Measurements.MEASUREMENTS);

        if (value != null) {
            setId(value.getId());
            setAmbientTemp(value.getAmbientTemp());
            setGroundTemp(value.getGroundTemp());
            setPressure(value.getPressure());
            setHumidity(value.getHumidity());
            setWindAverage(value.getWindAverage());
            setWindSpeed(value.getWindSpeed());
            setWindGust(value.getWindGust());
            setRainfall(value.getRainfall());
            setPiTemp(value.getPiTemp());
            setLux(value.getLux());
            setUploadedWu(value.getUploadedWu());
            setCreated(value.getCreated());
        }
    }
    // @formatter:on
}
