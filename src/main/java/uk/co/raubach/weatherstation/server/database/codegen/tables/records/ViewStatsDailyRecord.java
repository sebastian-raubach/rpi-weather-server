/*
 * This file is generated by jOOQ.
 */
package uk.co.raubach.weatherstation.server.database.codegen.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record10;
import org.jooq.Row10;
import org.jooq.impl.TableRecordImpl;

import uk.co.raubach.weatherstation.server.database.codegen.tables.ViewStatsDaily;


// @formatter:off
/**
 * VIEW
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ViewStatsDailyRecord extends TableRecordImpl<ViewStatsDailyRecord> implements Record10<String, Double, Double, Double, Double, Double, Double, Double, Double, String> {

    private static final long serialVersionUID = -393508308;

    /**
     * Setter for <code>weatherstation_db.view_stats_daily.agrType</code>.
     */
    public void setAgrtype(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>weatherstation_db.view_stats_daily.agrType</code>.
     */
    public String getAgrtype() {
        return (String) get(0);
    }

    /**
     * Setter for <code>weatherstation_db.view_stats_daily.ambient_temp</code>.
     */
    public void setAmbientTemp(Double value) {
        set(1, value);
    }

    /**
     * Getter for <code>weatherstation_db.view_stats_daily.ambient_temp</code>.
     */
    public Double getAmbientTemp() {
        return (Double) get(1);
    }

    /**
     * Setter for <code>weatherstation_db.view_stats_daily.ground_temp</code>.
     */
    public void setGroundTemp(Double value) {
        set(2, value);
    }

    /**
     * Getter for <code>weatherstation_db.view_stats_daily.ground_temp</code>.
     */
    public Double getGroundTemp() {
        return (Double) get(2);
    }

    /**
     * Setter for <code>weatherstation_db.view_stats_daily.pressure</code>.
     */
    public void setPressure(Double value) {
        set(3, value);
    }

    /**
     * Getter for <code>weatherstation_db.view_stats_daily.pressure</code>.
     */
    public Double getPressure() {
        return (Double) get(3);
    }

    /**
     * Setter for <code>weatherstation_db.view_stats_daily.humidity</code>.
     */
    public void setHumidity(Double value) {
        set(4, value);
    }

    /**
     * Getter for <code>weatherstation_db.view_stats_daily.humidity</code>.
     */
    public Double getHumidity() {
        return (Double) get(4);
    }

    /**
     * Setter for <code>weatherstation_db.view_stats_daily.wind_average</code>.
     */
    public void setWindAverage(Double value) {
        set(5, value);
    }

    /**
     * Getter for <code>weatherstation_db.view_stats_daily.wind_average</code>.
     */
    public Double getWindAverage() {
        return (Double) get(5);
    }

    /**
     * Setter for <code>weatherstation_db.view_stats_daily.wind_speed</code>.
     */
    public void setWindSpeed(Double value) {
        set(6, value);
    }

    /**
     * Getter for <code>weatherstation_db.view_stats_daily.wind_speed</code>.
     */
    public Double getWindSpeed() {
        return (Double) get(6);
    }

    /**
     * Setter for <code>weatherstation_db.view_stats_daily.wind_gust</code>.
     */
    public void setWindGust(Double value) {
        set(7, value);
    }

    /**
     * Getter for <code>weatherstation_db.view_stats_daily.wind_gust</code>.
     */
    public Double getWindGust() {
        return (Double) get(7);
    }

    /**
     * Setter for <code>weatherstation_db.view_stats_daily.rainfall</code>.
     */
    public void setRainfall(Double value) {
        set(8, value);
    }

    /**
     * Getter for <code>weatherstation_db.view_stats_daily.rainfall</code>.
     */
    public Double getRainfall() {
        return (Double) get(8);
    }

    /**
     * Setter for <code>weatherstation_db.view_stats_daily.date</code>.
     */
    public void setDate(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>weatherstation_db.view_stats_daily.date</code>.
     */
    public String getDate() {
        return (String) get(9);
    }

    // -------------------------------------------------------------------------
    // Record10 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row10<String, Double, Double, Double, Double, Double, Double, Double, Double, String> fieldsRow() {
        return (Row10) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row10<String, Double, Double, Double, Double, Double, Double, Double, Double, String> valuesRow() {
        return (Row10) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return ViewStatsDaily.VIEW_STATS_DAILY.AGRTYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field2() {
        return ViewStatsDaily.VIEW_STATS_DAILY.AMBIENT_TEMP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field3() {
        return ViewStatsDaily.VIEW_STATS_DAILY.GROUND_TEMP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field4() {
        return ViewStatsDaily.VIEW_STATS_DAILY.PRESSURE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field5() {
        return ViewStatsDaily.VIEW_STATS_DAILY.HUMIDITY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field6() {
        return ViewStatsDaily.VIEW_STATS_DAILY.WIND_AVERAGE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field7() {
        return ViewStatsDaily.VIEW_STATS_DAILY.WIND_SPEED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field8() {
        return ViewStatsDaily.VIEW_STATS_DAILY.WIND_GUST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field9() {
        return ViewStatsDaily.VIEW_STATS_DAILY.RAINFALL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field10() {
        return ViewStatsDaily.VIEW_STATS_DAILY.DATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component1() {
        return getAgrtype();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component2() {
        return getAmbientTemp();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component3() {
        return getGroundTemp();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component4() {
        return getPressure();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component5() {
        return getHumidity();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component6() {
        return getWindAverage();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component7() {
        return getWindSpeed();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component8() {
        return getWindGust();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component9() {
        return getRainfall();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component10() {
        return getDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getAgrtype();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value2() {
        return getAmbientTemp();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value3() {
        return getGroundTemp();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value4() {
        return getPressure();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value5() {
        return getHumidity();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value6() {
        return getWindAverage();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value7() {
        return getWindSpeed();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value8() {
        return getWindGust();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value9() {
        return getRainfall();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value10() {
        return getDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ViewStatsDailyRecord value1(String value) {
        setAgrtype(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ViewStatsDailyRecord value2(Double value) {
        setAmbientTemp(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ViewStatsDailyRecord value3(Double value) {
        setGroundTemp(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ViewStatsDailyRecord value4(Double value) {
        setPressure(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ViewStatsDailyRecord value5(Double value) {
        setHumidity(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ViewStatsDailyRecord value6(Double value) {
        setWindAverage(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ViewStatsDailyRecord value7(Double value) {
        setWindSpeed(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ViewStatsDailyRecord value8(Double value) {
        setWindGust(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ViewStatsDailyRecord value9(Double value) {
        setRainfall(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ViewStatsDailyRecord value10(String value) {
        setDate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ViewStatsDailyRecord values(String value1, Double value2, Double value3, Double value4, Double value5, Double value6, Double value7, Double value8, Double value9, String value10) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ViewStatsDailyRecord
     */
    public ViewStatsDailyRecord() {
        super(ViewStatsDaily.VIEW_STATS_DAILY);
    }

    /**
     * Create a detached, initialised ViewStatsDailyRecord
     */
    public ViewStatsDailyRecord(String agrtype, Double ambientTemp, Double groundTemp, Double pressure, Double humidity, Double windAverage, Double windSpeed, Double windGust, Double rainfall, String date) {
        super(ViewStatsDaily.VIEW_STATS_DAILY);

        set(0, agrtype);
        set(1, ambientTemp);
        set(2, groundTemp);
        set(3, pressure);
        set(4, humidity);
        set(5, windAverage);
        set(6, windSpeed);
        set(7, windGust);
        set(8, rainfall);
        set(9, date);
    }
// @formatter:on
}
